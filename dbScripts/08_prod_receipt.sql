DROP TABLE IF EXISTS `supply_chain`.`prod_receipt`;
CREATE TABLE `supply_chain`.`prod_receipt` (
  `RECEIPT_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `RECEIPT_FOLIO` VARCHAR(14) NOT NULL COMMENT '',
  `RECEIPT_STORAGE` INT NOT NULL COMMENT '',
  `RECEIPT_DATE` DATE NOT NULL COMMENT '',
  `RECEIPT_COMMENTS` VARCHAR(250) NULL COMMENT '',
  `RECEIPT_BY` VARCHAR(45) NULL COMMENT '',
  `CREATED_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `CHANGED_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`RECEIPT_ID`)  COMMENT '',
  UNIQUE INDEX `RECEIPT_FOLIO_IDX` (`RECEIPT_FOLIO` ASC)  COMMENT '',
  INDEX `RECEIPT_STORAGE_IDX` (`RECEIPT_STORAGE` ASC)  COMMENT '',
  FOREIGN KEY(`RECEIPT_STORAGE`) REFERENCES `supply_chain`.`sys_storage` (`STORAGE_ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
  );

/*
 * save sender, receiver, seller, purchaser
 */
DROP TABLE IF EXISTS `supply_chain`.`cross_receipt_company`;
CREATE TABLE `supply_chain`.`cross_receipt_company` (
  `CRC_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `CRC_RECEIPT_ID` INT NOT NULL COMMENT '',
  `CROSS_COMPANY_ROLE_ID` INT NOT NULL COMMENT '',
  `CREATED_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `CHANGED_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`CRC_ID`)  COMMENT '',
  UNIQUE INDEX `RECEIPT_COMPANY_UIDX` (`CRC_RECEIPT_ID` ASC, `CROSS_COMPANY_ROLE_ID` ASC)  COMMENT '',
  INDEX `CRC_FK_RECEIPT_IDX` (`CRC_RECEIPT_ID` ASC) COMMENT '',
  INDEX `CRC_FK_COMPANY_IDX` (`CROSS_COMPANY_ROLE_ID` ASC) COMMENT '',
  FOREIGN KEY (`CRC_RECEIPT_ID`) REFERENCES `supply_chain`.`prod_receipt` (`RECEIPT_ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (`CROSS_COMPANY_ROLE_ID`) REFERENCES `supply_chain`.`cross_company_role` (`CROSS_COMPANY_ROLE_ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
  );


-- IDUN 2275 = UNDEFINED
DROP TABLE IF EXISTS `supply_chain`.`prod_receipt_goods`;
CREATE TABLE `supply_chain`.`prod_receipt_goods` (
  `PRG_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `PRG_RECEIPT_ID` INT NOT NULL COMMENT '',
  `PRG_ITEM` VARCHAR(4) NOT NULL COMMENT '',
  `PRG_QUANTITY` INT NOT NULL DEFAULT 0 COMMENT '',
  `PRG_LOAD_MU` INT NOT NULL COMMENT '',
  `PRG_WEIGHT_POUNDS` DECIMAL(7,3) NOT NULL DEFAULT 0 COMMENT '',
  `PRG_WEIGHT_KILOS` DECIMAL(7,3) NOT NULL DEFAULT 0 COMMENT '',
  `PRG_WOODEN` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `PRG_IDUN` INT NOT NULL DEFAULT 2275 COMMENT '',
  `PRG_COMMENTS` VARCHAR(100) NULL COMMENT '',
  `CREATED_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `CHANGED_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`PRG_ID`)  COMMENT '',
  UNIQUE INDEX `PRT_RECEIPT_ITEM_IDX` (`PRG_RECEIPT_ID` ASC, `PRG_ITEM` ASC)  COMMENT '',
  INDEX `FK_PRG_RECEIPT_IDX` (`PRG_RECEIPT_ID` ASC)  COMMENT '',
  INDEX `FK_PRG_IDUN_IDX` (`PRG_IDUN` ASC)  COMMENT '',
  FOREIGN KEY (`PRG_RECEIPT_ID`) REFERENCES `supply_chain`.`prod_receipt` (`RECEIPT_ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (`PRG_IDUN`) REFERENCES `supply_chain`.`cat_un` (`UN_ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
  );

DROP TABLE IF EXISTS `supply_chain`.`prod_receipt_transport`;
CREATE TABLE `supply_chain`.`prod_receipt_transport` (
  `PRT_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `PRT_RECEIPT_ID` INT NOT NULL COMMENT '',
  `PRT_GUIDE` VARCHAR(50) NOT NULL COMMENT '',
  `PRT_GUIDE_DATE` DATE NOT NULL COMMENT '',
  `PRT_FREIGHTER` INT NOT NULL COMMENT '',
  `PRT_PAYMENT_CONDITION` INT NOT NULL COMMENT '',
  `PRT_VEHICLE` VARCHAR(20) NULL COMMENT '',
  `PRT_COMMENTS` VARCHAR(100) NULL COMMENT '',
  `CREATED_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `CHANGED_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`PRT_ID`)  COMMENT '',
  UNIQUE INDEX `PRT_RECEIPT_GUIDE_IDX` (`PRT_RECEIPT_ID` ASC, `PRT_GUIDE` ASC)  COMMENT '',
  UNIQUE INDEX `PRT_FREIGHTER_GUIDE_IDX` (`PRT_GUIDE` ASC, `PRT_FREIGHTER` ASC)  COMMENT '',
  INDEX `FK_PRT_RECEIPT_IDX` (`PRT_RECEIPT_ID` ASC)  COMMENT '',
  INDEX `FK_PRT_FREIGHTER_IDX` (`PRT_FREIGHTER` ASC)  COMMENT '',
  INDEX `FK_PRT_PAYMENT_CONDITION_IDX` (`PRT_PAYMENT_CONDITION` ASC)  COMMENT '',
  FOREIGN KEY (`PRT_RECEIPT_ID`) REFERENCES `supply_chain`.`prod_receipt` (`RECEIPT_ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (`PRT_FREIGHTER`) REFERENCES `supply_chain`.`cat_company` (`COMPANY_ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  FOREIGN KEY (`PRT_PAYMENT_CONDITION`) REFERENCES `supply_chain`.`sys_payment_condition` (`PAY_CND_ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
  );

DROP TABLE IF EXISTS `supply_chain`.`prod_receipt_documents`;
CREATE TABLE `supply_chain`.`prod_receipt_documents` (
  `PRD_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `PRD_RECEIPT_ID` INT NOT NULL COMMENT '',
  `PRD_FOLIO` VARCHAR(14) NOT NULL COMMENT 'represents either the packing list or invoice folio from customer',
  `PRD_DATE` DATE NOT NULL COMMENT '',
  `PRD_PURCHASE_ORDER` VARCHAR(14) NULL COMMENT '',
  `PRD_SALE_ORDER` VARCHAR(14) NULL COMMENT '',
  `PRD_PURCHASER` INT NOT NULL COMMENT '',
  `PRD_QUANTITY` INT NOT NULL DEFAULT 0 COMMENT '',
  `PRD_PACK_MU` INT NOT NULL COMMENT '',
  `CREATED_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `CHANGED_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`PRD_ID`)  COMMENT '',
  UNIQUE INDEX `PRD_FOLIO_IDX` (`PRD_FOLIO` ASC, `PRD_PURCHASER` ASC)  COMMENT '',
  INDEX `FK_PRD_RECEIPT_ID_IDX` (`PRD_RECEIPT_ID` ASC)  COMMENT '',
  INDEX `FK_PRD_PURCHASER_IDX` (`PRD_PURCHASER` ASC)  COMMENT '',
  INDEX `FK_PRD_PACK_MU_IDX` (`PRD_PACK_MU` ASC)  COMMENT '',
  FOREIGN KEY (`PRD_RECEIPT_ID`) REFERENCES `supply_chain`.`prod_receipt` (`RECEIPT_ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (`PRD_PURCHASER`) REFERENCES `supply_chain`.`cat_company` (`COMPANY_ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  FOREIGN KEY (`PRD_PACK_MU`) REFERENCES `supply_chain`.`sys_measurement_unit` (`MU_ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
  );

DROP TABLE IF EXISTS `supply_chain`.`sys_log`;
CREATE TABLE `supply_chain`.`sys_log` (
  `PROD_LOG_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `EVENT_DETAIL` TEXT NOT NULL COMMENT '',
  `EVENT_WHEN` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`PROD_LOG_ID`)  COMMENT ''
  );

DROP TABLE IF EXISTS `supply_chain`.`seq_pack_inventory`;
DROP TABLE IF EXISTS `supply_chain`.`seq_receipt`;
CREATE TABLE `supply_chain`.`seq_receipt` (
  `SEQ_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `SEQ_BY` INT NULL COMMENT '',
  `SEQ_WHEN` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`SEQ_ID`)  COMMENT ''
  );

DROP TABLE IF EXISTS `supply_chain`.`log_receipt`;
CREATE TABLE `supply_chain`.`log_receipt` (
  `LOG_RECEIPT_ID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `PROD_LOG_ID` INT NOT NULL COMMENT '',
  `RECEIPT_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`LOG_RECEIPT_ID`)  COMMENT '',
  UNIQUE INDEX `FK_PROD_LOG_ID_IDX` (`PROD_LOG_ID` ASC) COMMENT '',
  INDEX `RECEIPT_ID_IDX` (`RECEIPT_ID`) COMMENT '',
  FOREIGN KEY (`PROD_LOG_ID`) REFERENCES `supply_chain`.`sys_log` (`PROD_LOG_ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (`RECEIPT_ID`) REFERENCES `supply_chain`.`prod_receipt` (`RECEIPT_ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
  );